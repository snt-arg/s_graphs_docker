!function(s){"use strict";redux.field_objects=redux.field_objects||{},redux.field_objects.spinner=redux.field_objects.spinner||{},s(document).ready(function(){}),redux.field_objects.spinner.init=function(n){n||(n=s(document).find(".redux-group-tab:visible").find(".redux-container-spinner:visible")),s(n).each(function(){var n=s(this),e=n;n.hasClass("redux-field-container")||(e=n.parents(".redux-field-container:first")),e.is(":hidden")||e.hasClass("redux-field-init")&&(e.removeClass("redux-field-init"),n.find(".redux_spinner").each(function(){var t=s(this).find(".spinner-input").data();t.id=s(this).find(".spinner-input").attr("id"),n.find("#"+t.id).spinner({value:parseFloat(t.val,null),min:parseFloat(t.min,null),max:parseFloat(t.max,null),step:parseFloat(t.step,null),range:"min",slide:function(n,e){var i=s("#"+t.id);i.val(e.value),redux_change(i)}});parseInt(t.min,null)}),n.find(".spinner-input").keyup(function(){s(this).addClass("spinnerInputChange")}),n.find(".spinner-input").focus(function(){redux.field_objects.spinner.clean(s(this).val(),s(this))}),n.find(".spinner-input").typeWatch({callback:function(n){redux.field_objects.spinner.clean(n,s(this))},wait:500,highlight:!1,captureLength:1}))})},redux.field_objects.spinner.clean=function(n,e){if(e.hasClass("spinnerInputChange")){e.removeClass("spinnerInputChange");var i=e.data();n=""===(n=parseFloat(n))||null===n?i.min:n>=parseInt(i.max)?i.max:n<=parseInt(i.min)?i.min:Math.round(n/i.step)*i.step,e.val(n).trigger("change")}}}(jQuery);
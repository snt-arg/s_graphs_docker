# GENERAL SITE SETTINGS
# title: This will be displayed as the website's name in your browser tab.
title: S-Graphs+
sub_title: Real-time Localization and Mapping leveraging Hierarchical Representations
title_home: Home
markdown: kramdown
theme: jekyll-theme-minimal
# description: This will be meta HTML tag content. This can be ignored.
description: Real-time Localization and Mapping leveraging Hierarchical Representations
# baseurl: The subpath of your site
# > set this to "", if you renamed the repository to <user>.github.io
url: https://snt-arg.github.io
baseurl: /s_graphs_docker

# LANDING PAGE
# username: This will displayed on the landing page as your name.
username: S-Graph
# typing_text: This will be typed before 'scroll down for more'.
# > set this to your job title, e.g. Fullstack Developer
typing_text: SnT | ARG

# For every social button you want to display, set your username or userid
# If you do not use one of the following websites, then leave it empty
# > twitter_username:
github_username: snt-arg/s_graphs_docker
paper_link: https://arxiv.org/abs/2211.08754
youtube_link: https://www.youtube.com/watch?v=cXH_LzCn2_E

# LANDING GIF
gif-landing: true

# ABSTRACT SECTION
show_abstract_card: true
abstract_title: Abstract
abstract_description: "3D scene graphs represent the environment in an efficient graphical format of nodes and edges representing different geometric elements with suitable semantic attributes and
relational constraints with other elements. Nevertheless, existing
methods do not efficiently couple the scene graph with the
SLAM graph generating it, to simultaneously improve in real-
time the metric estimate of the robot pose or its map estimate. In
this direction, we present an evolved version of the Situational
Graphs (dubbed S-Graphs+), which jointly models in a single
optimizable graph a set of robot keyframes as well as the high-
level representations of the environment.<br><br>
S-Gaphs+ is a four-layered optimizable graph that includes:(1) a keyframes layer in which robot poses are estimated, (2)
a walls layer consisting of all the registered wall planes, (3) a
rooms layer constraining the mapped wall planes, and (4) a floors
layer encompassing the rooms within a given floor level. To efficiently represent rooms and
floors we present novel room and floor segmentation algorithms
utilizing the mapped wall planes and free-space clusters. We
test S-Graphs+ on simulated datasets representing distinct indoor
environments, on real datasets captured on several construction
sites and office environments, and on a public dataset captured
in indoor office environments. S-Graphs+ outperforms relevant
baselines in the majority of the datasets, while extending the
robot situational awareness by a four-layered scene model."

# ARCHITECTURE
show_architecture: true
architecture_title: Architecture
architecture_description: The architecture of S-Graphs+ is illustrated in the figure above. 
Its pipeline can be divided into six modules, and its estimates are referred to four frames: the LiDAR frame L, the robot frame R, the odometry frame O, and the map frame M. L and R are rigidly attached to the robot and then depend on the time instant t, while O and M are fixed. 
The first module receives the 3D LiDAR point cloud in frame L, which is pre-filtered and downsampled. The second module estimates the robot odometry in frame O either from LiDAR measurements or the robot encoders. 
Four additional font-end modules generate the four-layered topological graph modelling the understanding of the environment, namely: 1) The plane detection module, segmenting and initializing wall planes in the map frame M using the point clouds at each keyframe. 
2) The room detection module, generating first free-space clusters from the robot poses and 3D LiDAR measurements, and then using such clusters along with the mapped planes to detect room centers in frame M. 
3) The floor detection module, utilizes the information of all the currently mapped walls to extract the center of the current floor level in frame M. 
4) Finally, the loop closure module, which utilizes a scan-matching algorithm to recognize revisited places and correct the drift.  

# CONTACT SECTION
# show_contact_card:
# > setting this to true, will display the Contact section
# > setting this to false, will omit the Contact section
show_contact_card: false
# contact_title: The will be displayed as the title in the Contact section
contact_title: Contact
# contact_description: This will be displayed under the title.
contact_description: Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. If you like this theme and want to use it for yourself, checkout the source code and the documentation at <a class="highlight-link" href="https://github.com/longpdo/neumorphism" target="_blank" rel="noreferrer"> Github </a>.

# GITHUB-METADATA
# Set this to your forked repository
# > e.g. <user>/<user>.github.io
repository: ""

# CITATION 
citation: true
citation_title: Citation
#Â Footer
enable-footer: true
# GOOGLE-ANALYTICS
google-analytics:
  id: "UA-158757509-2"

### END OF VALUES YOU SHOULD CHANGE ###

plugins:
  - "jekyll-github-metadata"

exclude:
  [
    "_assets",
    "Gemfile",
    "Gemfile.lock",
    "gulpfile.js",
    "node_modules",
    "package.json",
  ]
